# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["ish"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Check for lock file
        run: |
          if [ -f package-lock.json ]; then
            echo "Found package-lock.json"
          elif [ -f npm-shrinkwrap.json ]; then
            echo "Found npm-shrinkwrap.json"
          elif [ -f yarn.lock ]; then
            echo "Found yarn.lock"
          elif [ -f pnpm-lock.yaml ]; then
            echo "Found pnpm-lock.yaml"
          else
            echo "Error: No lock file found" >&2
            exit 1
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f npm-shrinkwrap.json ]; then
            npm ci
          elif [ -f yarn.lock ]; then
            yarn install
          elif [ -f pnpm-lock.yaml ]; then
            pnpm install
      - name: Build
        run: pnpm run build
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          path: './dist'
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
